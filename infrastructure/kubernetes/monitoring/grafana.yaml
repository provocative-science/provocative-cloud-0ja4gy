---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: provocative-cloud
  labels:
    app: grafana
    component: monitoring
    environment: production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: ssd-storage

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: provocative-cloud
  labels:
    app: grafana
    component: monitoring
    environment: production
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsNonRoot: true
      containers:
        - name: grafana
          image: grafana/grafana:9.5.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: web
              protocol: TCP
          env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: monitoring-config
                  key: GRAFANA_ANONYMOUS_ACCESS
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: admin-password
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel"
            - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
              value: "/etc/grafana/provisioning/dashboards/environmental/overview.json"
          volumeMounts:
            - name: storage
              mountPath: /var/lib/grafana
            - name: dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: environmental-dashboards
              mountPath: /etc/grafana/provisioning/dashboards/environmental
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"
          livenessProbe:
            httpGet:
              path: /api/health
              port: web
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: web
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: grafana-storage
        - name: dashboards
          configMap:
            name: grafana-dashboards
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: environmental-dashboards
          configMap:
            name: grafana-environmental-dashboards
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - grafana
                topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: provocative-cloud
  labels:
    app: grafana
    component: monitoring
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: web
  selector:
    app: grafana
  type: ClusterIP
  sessionAffinity: ClientIP